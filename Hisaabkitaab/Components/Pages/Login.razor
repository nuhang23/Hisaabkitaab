@page "/"
@using MudBlazor
@using Hisaabkitaab.Components.Model
@using Hisaabkitaab.Components.Services

<MudContainer MaxWidth="MaxWidth.Large" Class="pa-4 mx-auto mt-10">
    <MudGrid>
        <MudItem xs="6" md="6">
            <MudText Typo="Typo.h4" Style="color: black; margin-left: 250px;">Welcome to</MudText>
            <MudImage Src="logo.png" Height="480" Width="480" Alt="Logo" Class="rounded-lg mt-3" />
        </MudItem>
        <MudItem xs="6" md="6" Class="p-4 mt-5">
            <MudPaper Class="p-6" Style="box-shadow: none;">
                <MudText Typo="Typo.h5" Align="Align.Left" Style="color: black;">Sign in</MudText>       
                <MudForm Class="mt-5 mb-5" Style="padding: 20px;" OnValidSubmit="handleLogin">
                    <MudTextField Variant="Variant.Filled" T="string" @bind-Value="Email" Label="Email" FullWidth="false" style="margin-bottom: 20px;" />
                    <MudTextField Variant="Variant.Filled" T="string" @bind-Value="Password" Label="Password" FullWidth="false" Style="margin-bottom: 20px;" />

                    <MudButton Variant="Variant.Text" Style="color: black; text-transform: none; margin-bottom: 10px; margin-left:auto;">
                        Forgot password?
                    </MudButton>
                    <MudButton Variant="Variant.Filled" @onclick="HandleLogin" Style="background-color: black; color: white; margin-top: 10px;" FullWidth="true" Class="mb-3">
                        Sign in
                    </MudButton>
                    <MudButton Variant="Variant.Text" @onclick="GoToRegister" Style="text-transform: none; color: black;">
                        Create new account
                    </MudButton>
                </MudForm>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
        [Inject]
        private NavigationManager Navigation { get; set; }
        [Inject]
    private DatabaseServices DbService { get; set; }             [Inject]
    private IDialogService DialogService { get; set; }

    private string Email;
    private string Password;


    private async Task HandleLogin()
    {
        if (string.IsNullOrWhiteSpace(Email) || string.IsNullOrWhiteSpace(Password))
        {
            await DialogService.ShowMessageBox("Error", "Email and Password are required.");
            return;
        }

        try
        {
            var user = await DbService.GetUserByEmailAsync(Email);

            if (user == null)
            {
                await DialogService.ShowMessageBox("Error", "User not found.");
                return;
            }

            if (Password != user.Password)
            {
                await DialogService.ShowMessageBox("Error", "Invalid password.");
                return;
            }

            await DialogService.ShowMessageBox("Success", "Login successful!");
            Navigation.NavigateTo("/dashboard");
        }
        catch (Exception ex)
        {
            await DialogService.ShowMessageBox("Error", $"An error occurred: {ex.Message}");
        }
    }

    private void GoToRegister()
    {
        Navigation.NavigateTo("/register");
    }
}
