@page "/transactions"
@using MudBlazor
@using Hisaabkitaab.Components.Model
@using Hisaabkitaab.Components.Services

<MudContainer MaxWidth="MaxWidth.Large" Class="pa-4 mx-auto mt-10">
    <!-- Transaction Cards -->
    <MudGrid>
        <!-- Income Card -->
        <MudItem xs="12" md="6">
            <MudCard>
                <MudCardHeader>
                    <MudText Typo="Typo.h6">Income Transactions</MudText>
                </MudCardHeader>
                <MudCardContent>
                    @foreach (var transaction in incomeTransactions)
                    {
                        <MudListItem T="Transactions">
                            <MudText>@transaction.Title</MudText>
                            <MudText>@transaction.Amount</MudText>
                        </MudListItem>
                    }
                    <!-- Button to open form for adding new income -->
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth @onclick="ShowAddIncomeForm">Add Income</MudButton>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <!-- Expense Card -->
        <MudItem xs="12" md="6">
            <MudCard>
                <MudCardHeader>
                    <MudText Typo="Typo.h6">Expense Transactions</MudText>
                </MudCardHeader>
                <MudCardContent>
                    @foreach (var transaction in expenseTransactions)
                    {
                        <MudListItem T="Transactions">
                            <MudText>@transaction.Title</MudText>
                            <MudText>@transaction.Amount</MudText>
                        </MudListItem>
                    }
                    <!-- Button to open form for adding new expense -->
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth @onclick="ShowAddExpenseForm">Add Expense</MudButton>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>

    <!-- Add Transaction Form Dialog -->
    @if (isAddTransactionDialogOpen)
    {
        <MudDialog @bind-Open="isAddTransactionDialogOpen">
            <MudDialogTitle>Add New Transaction</MudDialogTitle>
            <MudDialogContent>
                <MudTextField @bind-Value="Title" Label="Title" Variant="Variant.Filled" FullWidth />
                <MudTextField @bind-Value="Amount" Label="Amount" Variant="Variant.Filled" FullWidth />
                <MudTextField @bind-Value="TransactionType" Label="Transaction Type" Variant="Variant.Filled" FullWidth />
                <MudTextField @bind-Value="Note" Label="Note (Optional)" Variant="Variant.Filled" FullWidth />
            </MudDialogContent>
            <MudDialogActions>
                <MudButton OnClick="AddTransaction" Variant="Variant.Filled" Color="Color.Primary">Add</MudButton>
                <MudButton OnClick="CloseAddTransactionDialog" Variant="Variant.Text">Cancel</MudButton>
            </MudDialogActions>
        </MudDialog>
    }
</MudContainer>

@code {
    [Inject] private NavigationManager Navigation { get; set; }
    [Inject] private DatabaseServices DbService { get; set; }
    [Inject] private IDialogService DialogService { get; set; }

    private string Income = "Income";
    private string Expense = "Expense";

    private string Title { get; set; }
    private double Amount { get; set; }
    private string TransactionType { get; set; }
    private string Note { get; set; }
    private int UserId { get; set; }
    
    private List<Transactions> incomeTransactions = new List<Transactions>();
    private List<Transactions> expenseTransactions = new List<Transactions>();
    private bool isAddTransactionDialogOpen = false;

    protected override async Task OnInitializedAsync()
    {
        // Initialize transactions
        incomeTransactions = await DbService.GetTransactionsByTypeAsync(Income);
        expenseTransactions = await DbService.GetTransactionsByTypeAsync(Expense);
    }

    private void ShowAddIncomeForm()
    {
        Title = string.Empty;
        Amount = 0;
        TransactionType = Income;
        isAddTransactionDialogOpen = true;
    }

    private void ShowAddExpenseForm()
    {
        Title = string.Empty;
        Amount = 0;
        TransactionType = Expense;
        isAddTransactionDialogOpen = true;
    }

    private async Task AddTransaction()
    {
        // Set the current time for CreatedAt and UpdatedAt
        var newTransaction = new Transactions
        {
            UserId = UserId,  // Assuming UserId is already set (you can fetch it from authentication)
            Title = Title,
            Amount = Amount,
            TransactionType = TransactionType,
            CreatedAt = DateTime.Now,
            UpdatedAt = DateTime.Now,
            Note = Note
        };

        // Save the transaction in the database
        await DbService.CreateTransaction(newTransaction);

        // Refresh transactions
        incomeTransactions = await DbService.GetTransactionsByTypeAsync(Income);
        expenseTransactions = await DbService.GetTransactionsByTypeAsync(Expense);

        isAddTransactionDialogOpen = false; // Close the dialog
    }

    private void CloseAddTransactionDialog()
    {
        isAddTransactionDialogOpen = false; // Close the dialog
    }
}